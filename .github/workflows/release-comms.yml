# This workflow runs whenever the release PR is merged. It includes post-release communication processes like
# posting to slack, the website, community forums, etc.
# Only things that happen after a release is completed and all of the necessary code changes (like the changelog) are made.
name: Post-release
on:
  workflow_dispatch:
    inputs:
      dry_run:
        required: false
        default: true
      version:
        required: true
      latest:
        type: bool
        default: false
  pull_request:
    types:
      - closed
    branches:
      - 'main'
      - 'v*.*.*'
jobs:
  post_release:
    name: Post-release comms
    steps:
      - if: github.event.workflow_dispatch
        run: |
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          echo "DRY_RUN=${{ inputs.dry_run }}" >> $GITHUB_ENV
          echo "LATEST=${{ inputs.latest }}" >> $GITHUB_ENV
      - if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
        run: |
          echo "VERSION=$(echo ${{ github.head_ref }} | sed -e 's/release\///g')" >> $GITHUB_ENV
          echo "DRY_RUN=true" >> $GITHUB_ENV
          echo "LATEST=${{ contains(github.event.pull_request.labels.*.name, 'release/latest') }}" >> $GITHUB_ENV
      - uses: grafana/security-patch-actions/.github/workflows/mirror-branch.yml
        with:
          ref: "release-${{ .env.VERSION }}"
          src_repo: grafana/grafana-security-mirror
          dest_repo: grafana/grafana
      - uses: grafana/security-patch-actions/.github/workflows/mirror-tag.yml
        with:
          ref: "v${{ .env.VERSION }}"
          src_repo: grafana/grafana-security-mirror
          dest_repo: grafana/grafana
      - run: "echo post changelog to forums for $VERSION (dry run: $DRY_RUN)"
      - uses: .github/workflows/github-release.yml
        with:
          version: ${{ .env.VERSION }}
      - run: "echo publish docs for $VERSION (dry run: $DRY_RUN)"
      - run: "announce on slack that $VERSION has been released (dry run: $DRY_RUN)"
